package Vista.Otros;

import Model.DatosCiudades;
import Fuentes.Fuentes;
import Controller.FuncionesCiudades;
import Vista.Notificaciones.Aceptar_Cancelar;
import Vista.Notificaciones.Advertencia;
import Vista.Notificaciones.Fallo;
import Vista.Notificaciones.Realizado;
import View.Principal3;
import java.awt.Color;
import java.awt.Frame;
import java.util.ArrayList;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SwichBlade15
 */
public final class Ciudades extends javax.swing.JInternalFrame {

    DatosCiudades datos = new DatosCiudades();
    FuncionesCiudades funcion = new FuncionesCiudades();
    boolean tecla = false;
    Fuentes tipofuentes;

    public Ciudades() {
        initComponents();
        inhabilitar();
        mostrar("");
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        this.setBackground(new Color(0, 0, 0, 0));
        this.setIconifiable(false);
        this.setBorder(null);
        txtIdciudades.setVisible(false);
        botonesTransparentes();
    }

    public void mostrar(String buscar) {
        try {
            DefaultTableModel modelo;
            modelo = funcion.mostrar(buscar);
            tblCiudades.setModel(modelo);
            ocultar_columnas();
            
            cmbDepartamentos.removeAllItems();
            ArrayList<String> lista = new ArrayList<String>();
            lista = funcion.llenar_comboDep();

            for (int i = 0; i < lista.size(); i++) {
                cmbDepartamentos.addItem(lista.get(i));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void inhabilitar() {
        txtCiudades.setEditable(false);
        txtCiudades.setText("");
        txtIdciudades.setText("");

        btnGuardar.setEnabled(false);
        btnNuevo.setEnabled(true);
        btnEliminar.setEnabled(false);
        cmbDepartamentos.setEnabled(false);
    }

    public void habilitar() {
        txtCiudades.setEditable(true);
        txtCiudades.setText("");
        txtBuscar.setText("");

        txtBuscar.setEditable(true);
        btnGuardar.setEnabled(true);
        btnNuevo.setEnabled(false);
        btnEliminar.setEnabled(true);
        cmbDepartamentos.setEnabled(true);
    }

    public void ocultar_columnas() {
        tblCiudades.getColumnModel().getColumn(0).setMaxWidth(0);
        tblCiudades.getColumnModel().getColumn(0).setMinWidth(0);
        tblCiudades.getColumnModel().getColumn(0).setPreferredWidth(0);
    }

    public void botonesTransparentes() {
        btnEliminar.setOpaque(false);
        btnEliminar.setContentAreaFilled(false);
        btnEliminar.setBorderPainted(false);

        btnGuardar.setOpaque(false);
        btnGuardar.setContentAreaFilled(false);
        btnGuardar.setBorderPainted(false);

        btnNuevo.setOpaque(false);
        btnNuevo.setContentAreaFilled(false);
        btnNuevo.setBorderPainted(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblEncabezado = new javax.swing.JLabel();
        lblDepartamentos = new javax.swing.JLabel();
        txtCiudades = new javax.swing.JTextField();
        lblCiudad = new javax.swing.JLabel();
        cmbDepartamentos = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCiudades = new javax.swing.JTable();
        btnNuevo = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        txtIdciudades = new javax.swing.JTextField();
        lblCerrar = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        lblFondoBuscar = new javax.swing.JLabel();
        lblFondo = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(650, 443));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblEncabezado.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
        lblEncabezado.setForeground(new java.awt.Color(255, 255, 255));
        lblEncabezado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEncabezado.setText("Ciudades");
        getContentPane().add(lblEncabezado, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 180, -1));

        lblDepartamentos.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        lblDepartamentos.setText("Departamento:");
        getContentPane().add(lblDepartamentos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        txtCiudades.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtCiudades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCiudadesActionPerformed(evt);
            }
        });
        txtCiudades.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCiudadesKeyTyped(evt);
            }
        });
        getContentPane().add(txtCiudades, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 200, -1));

        lblCiudad.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        lblCiudad.setText("Ciudad:");
        getContentPane().add(lblCiudad, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 120, -1, -1));

        cmbDepartamentos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cmbDepartamentos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbDepartamentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDepartamentosActionPerformed(evt);
            }
        });
        getContentPane().add(cmbDepartamentos, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 200, -1));

        tblCiudades = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tblCiudades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblCiudades.setFocusable(false);
        tblCiudades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCiudadesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCiudades);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 610, 170));

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Nuevo32.png"))); // NOI18N
        btnNuevo.setToolTipText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        getContentPane().add(btnNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 190, 40, -1));

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Eliminar32.png"))); // NOI18N
        btnEliminar.setToolTipText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        btnEliminar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnEliminarKeyPressed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 190, 40, -1));

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Guardar32.png"))); // NOI18N
        btnGuardar.setToolTipText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 190, 40, -1));
        getContentPane().add(txtIdciudades, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 20, -1));

        lblCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Cerrar32.png"))); // NOI18N
        lblCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCerrarMouseClicked(evt);
            }
        });
        getContentPane().add(lblCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 14, -1, -1));

        txtBuscar.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        txtBuscar.setForeground(new java.awt.Color(0, 102, 255));
        txtBuscar.setText("Buscar Departamento...");
        txtBuscar.setBorder(null);
        txtBuscar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBuscarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBuscarFocusLost(evt);
            }
        });
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });
        getContentPane().add(txtBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(471, 73, 148, 18));

        lblFondoBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoBuscador.png"))); // NOI18N
        getContentPane().add(lblFondoBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, -1, -1));

        lblFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoCiudades.png"))); // NOI18N
        getContentPane().add(lblFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        habilitar();
        txtCiudades.requestFocus();
        txtBuscar.setEditable(false);
        btnEliminar.setEnabled(false);
        mostrar("");
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        eliminar();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEliminarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnEliminarKeyPressed

    }//GEN-LAST:event_btnEliminarKeyPressed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (txtIdciudades.getText().length() == 0) {
            guardar();
        } else {
            editar();
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void tblCiudadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCiudadesMouseClicked
        int seleccionar = tblCiudades.rowAtPoint(evt.getPoint());
        txtIdciudades.setText(String.valueOf(tblCiudades.getValueAt(seleccionar, 0)));
        txtCiudades.setText(String.valueOf(tblCiudades.getValueAt(seleccionar, 1)));
        cmbDepartamentos.setSelectedItem(String.valueOf(tblCiudades.getValueAt(seleccionar, 2)));
        txtCiudades.setEditable(true);
        btnEliminar.setEnabled(true);
        btnGuardar.setEnabled(true);
        btnNuevo.setEnabled(false);
        cmbDepartamentos.setEnabled(true);
    }//GEN-LAST:event_tblCiudadesMouseClicked

    private void txtCiudadesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCiudadesKeyTyped
        char c = evt.getKeyChar();
        if (Character.isLowerCase(c)) {
            evt.setKeyChar(Character.toUpperCase(c));
        }

        char validar = evt.getKeyChar();

        if (Character.isDigit(validar)) {
            getToolkit().beep();
            evt.consume();
            mensaje = "Ingrese solo letras";
            advertencia();
        }

        int numerocaracteres = 39;
        if (txtCiudades.getText().length() > numerocaracteres) {
            evt.consume();
            mensaje = "Solo se permiten 40 caracteres";
            advertencia();
        }
    }//GEN-LAST:event_txtCiudadesKeyTyped

    private void lblCerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCerrarMouseClicked
        Principal3.lblProceso.setText("Proceso: OFF");
        this.dispose();
    }//GEN-LAST:event_lblCerrarMouseClicked

    private void txtBuscarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarFocusGained
        if (tecla == false) {
            txtBuscar.setText("");
        }
    }//GEN-LAST:event_txtBuscarFocusGained

    private void txtBuscarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarFocusLost
        if (tecla == false) {
            txtBuscar.setText("Busque algo...");
        }
    }//GEN-LAST:event_txtBuscarFocusLost

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        txtBuscar.transferFocus();
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
        tecla = true;
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        mostrar(txtBuscar.getText());
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        char c = evt.getKeyChar();
        if (Character.isLowerCase(c)) {
            evt.setKeyChar(Character.toUpperCase(c));
        }

        char validar = evt.getKeyChar();

        if (Character.isDigit(validar)) {
            getToolkit().beep();
            evt.consume();
            mensaje = "Ingrese solo letras";
            advertencia();
        }

        int numerocaracteres = 19;
        if (txtBuscar.getText().length() > numerocaracteres) {
            evt.consume();
            mensaje = "Solo se permiten 20 caracteres";
            advertencia();
        }
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void cmbDepartamentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDepartamentosActionPerformed
        this.transferFocus();
        btnGuardar.requestFocus();
    }//GEN-LAST:event_cmbDepartamentosActionPerformed

    private void txtCiudadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCiudadesActionPerformed
        this.transferFocus();
        cmbDepartamentos.requestFocus();
    }//GEN-LAST:event_txtCiudadesActionPerformed

    //Metodos para llamar a los JDialog de Advertencia, Fallo y Realizado
    Frame f = JOptionPane.getFrameForComponent(this);
    String encabezado;
    String mensaje;
    Icon icono;

    public void advertencia() {
        Advertencia dialog = new Advertencia(f, true);
        Advertencia.lblEncabezado.setText(mensaje);
        dialog.setVisible(true);
    }

    public void fallo() {
        Fallo dialog = new Fallo(f, true);
        Fallo.lblEncabezado.setText(mensaje);
        dialog.setVisible(true);
    }

    public void realizado() {
        Realizado dialog = new Realizado(f, true);
        Realizado.lblEncabezado.setText(mensaje);
        dialog.setVisible(true);
    }
    
    public void aceptarCancelar() {
        Aceptar_Cancelar dialog = new Aceptar_Cancelar(f, true);
        icono = new ImageIcon(getClass().getResource("/Imagenes/FondoCerrarSesion.png"));
        Aceptar_Cancelar.lblFondo.setIcon(icono);
        Aceptar_Cancelar.lblEncabezado.setText(encabezado);
        Aceptar_Cancelar.lblMensaje.setText(mensaje);
        dialog.setVisible(true);
    }

    public void validarCampos() {
        if (txtCiudades.getText().length() == 0) {
            mensaje = "Ingrese una ciudad";
            advertencia();
            txtCiudades.requestFocus();
            return;
        }

        if (cmbDepartamentos.getSelectedItem() == null) {
            mensaje = "No existen DEPARTAMENTOS en el sistema";
            advertencia();
            this.dispose();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> cmbDepartamentos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCerrar;
    private javax.swing.JLabel lblCiudad;
    private javax.swing.JLabel lblDepartamentos;
    private javax.swing.JLabel lblEncabezado;
    private javax.swing.JLabel lblFondo;
    private javax.swing.JLabel lblFondoBuscar;
    private javax.swing.JTable tblCiudades;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCiudades;
    private javax.swing.JTextField txtIdciudades;
    // End of variables declaration//GEN-END:variables

    public void guardar() {
        validarCampos();

        datos.setCiudades(txtCiudades.getText());

        int categoria = cmbDepartamentos.getSelectedIndex();
        String categoria2 = ((String) cmbDepartamentos.getItemAt(categoria));

        if (funcion.insertar(datos, funcion.buscarDepartamento(categoria2))) {
            mensaje = "Ciudad guardada correctamente";
            realizado();
            mostrar("");
            inhabilitar();
        } else {
            mensaje = "Ciudad no guardada";
            fallo();
            mostrar("");
        }
    }

    public void editar() {
        validarCampos();

        datos.setIdciudades(Integer.parseInt(txtIdciudades.getText()));
        datos.setCiudades(txtCiudades.getText());
        int categoria = cmbDepartamentos.getSelectedIndex();
        String categoria2 = ((String) cmbDepartamentos.getItemAt(categoria));

        if (funcion.editar(datos, categoria2)) {
            mensaje = "Ciudad editada correctamente";
            realizado();
            mostrar("");
            inhabilitar();
        } else {
            mensaje = "Ciudad no editada";
            fallo();
            mostrar("");
        }
    }

    public void eliminar() {
        if (txtCiudades.getText().length() == 0) {
            mensaje = "Debes seleccionar primero una ciudad a eliminar.";
            advertencia();
            txtCiudades.requestFocus();
        } else {
            encabezado = "Eliminar permanentemente";
            mensaje = "Esta seguro de eliminar este registro?";
            String reply = Principal3.txtAceptarCancelar.getText();
            if (reply.equals("1")) {

                datos.setIdciudades(Integer.parseInt(txtIdciudades.getText()));

                if (funcion.eliminar(datos)) {
                    mensaje = "Ciudad eliminada correctamente";
                    realizado();
                    txtCiudades.setText("");
                    mostrar("");
                    inhabilitar();
                } else {
                    mensaje = "Ciudad no eliminada";
                    fallo();
                    mostrar("");
                }
            }
        }
    }
}
